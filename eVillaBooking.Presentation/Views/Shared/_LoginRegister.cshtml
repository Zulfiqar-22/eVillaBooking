@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager;
@inject UserManager<ApplicationUser> UserManager;

@{
    var role = string.Empty;
    if(SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        role = (await UserManager.GetRolesAsync(user!)).FirstOrDefault();
    }
}
<ul class="navbar-nav">

    @if(!SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            <a class="nav-link btn btn-danger fw-bolder" asp-action="Register" asp-controller="Account">
                Register
            </a>
        </li>

        <li class="nav-item">
            <a class="nav-link btn btn-danger fw-bolder" asp-action="Login" asp-controller="Account">
                Login

            </a>
        </li>
     
}
      else{
          <li class="nav-item">
            <a class="nav-link btn btn-danger fw-bolder">@UserManager.GetUserName(User) (@role.ToUpper())

        </a>
    </li>

    <li class="nav-item">
        <a class="nav-link btn btn-danger fw-bolder" asp-action="Logout" asp-controller="Account">
            Logout

        </a>
    </li>
    }
</ul>
